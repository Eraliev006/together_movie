"""upgrade a film genre association table

Revision ID: b8252e454c1d
Revises: 62b23615ae7e
Create Date: 2025-02-16 20:51:11.268513

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'b8252e454c1d'
down_revision: Union[str, None] = '62b23615ae7e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_unique_constraint('idx_unique_film_genre', 'film_genres_association', ['film_id', 'genre_id'])
    op.drop_constraint('film_genres_association_film_id_fkey', 'film_genres_association', type_='foreignkey')
    op.drop_constraint('film_genres_association_genre_id_fkey', 'film_genres_association', type_='foreignkey')
    op.create_foreign_key(None, 'film_genres_association', 'genres', ['film_id'], ['id'])
    op.create_foreign_key(None, 'film_genres_association', 'films', ['genre_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'film_genres_association', type_='foreignkey')
    op.drop_constraint(None, 'film_genres_association', type_='foreignkey')
    op.create_foreign_key('film_genres_association_genre_id_fkey', 'film_genres_association', 'genres', ['genre_id'], ['id'])
    op.create_foreign_key('film_genres_association_film_id_fkey', 'film_genres_association', 'films', ['film_id'], ['id'])
    op.drop_constraint('idx_unique_film_genre', 'film_genres_association', type_='unique')
    # ### end Alembic commands ###
